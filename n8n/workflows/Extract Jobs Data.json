{
  "name": "Extract Jobs Data",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -864,
        736
      ],
      "id": "35673709-c1f6-4271-9573-74e543619048",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT job_title AS text_to_embed, 'jobs_title' AS collection\nFROM job_records_structured",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -432,
        192
      ],
      "id": "d48dfa66-c7d1-4424-a3e8-98f6739f863f",
      "name": "Get job_title",
      "credentials": {
        "postgres": {
          "id": "XjR5TJfdQN2TCi6n",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT tags AS text_to_embed, 'tags_title' AS collection\nFROM job_records_structured",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -400,
        1520
      ],
      "id": "92beb56d-5c0d-4426-8ad3-7b7d34da52d2",
      "name": "Get tags",
      "credentials": {
        "postgres": {
          "id": "XjR5TJfdQN2TCi6n",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -224,
        192
      ],
      "id": "b5b5b4e1-bc5e-47dd-83d2-70cabe588832",
      "name": "Loop Over Job Titles"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c26806c3-9311-4bcb-a116-928b4b2d6ab7",
              "leftValue": "={{ $json.collection_exists }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        704,
        192
      ],
      "id": "f5ad7840-b941-4712-bee2-712fa3a85179",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c26806c3-9311-4bcb-a116-928b4b2d6ab7",
              "leftValue": "={{ $json.collection_exists }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        704,
        864
      ],
      "id": "65ab3b5e-ead5-425e-b9cd-5e1ad179a3cf",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c26806c3-9311-4bcb-a116-928b4b2d6ab7",
              "leftValue": "={{ $json.collection_exists }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        848,
        1536
      ],
      "id": "968246ce-354f-4f46-b3d8-61f635d1f0e1",
      "name": "If2"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT location AS text_to_embed, 'location_title' AS collection\nFROM job_records_structured",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -416,
        848
      ],
      "id": "d069e352-d6a9-4cb0-9ea6-af4fa7116c4b",
      "name": "Get location",
      "credentials": {
        "postgres": {
          "id": "XjR5TJfdQN2TCi6n",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/embed",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.text_to_embed }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        96,
        192
      ],
      "id": "e8410d36-c6db-4dc5-835e-04a65b604f1b",
      "name": "Get Job Embeding"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/embed",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.text_to_embed }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        96,
        864
      ],
      "id": "9af2f048-033e-43a0-b140-144c50451bf7",
      "name": "Get Location Embeding"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/embed",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.text_to_embed }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        1536
      ],
      "id": "4379d3bc-463d-457b-bcd1-5369c2f0d9d7",
      "name": "Get Tags Embeding"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -208,
        848
      ],
      "id": "417debbb-3152-4ce4-b8bd-bce67c995568",
      "name": "Loop Over Locations"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -192,
        1520
      ],
      "id": "2607edcc-af16-4c40-acc0-01c76492cc9e",
      "name": "Loop Over Tags"
    },
    {
      "parameters": {
        "operation": "collectionExists",
        "collectionName": "={{ $('Loop Over Job Titles').item.json.collection }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        304,
        192
      ],
      "id": "fdc5e64b-50bc-48cf-b822-7f012c145784",
      "name": "Check If Collection Jobs Titles Exists",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "operation": "collectionExists",
        "collectionName": "={{ $('Loop Over Locations').item.json.collection }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        304,
        864
      ],
      "id": "0025d25e-6dda-4310-a0bc-053278cfdf78",
      "name": "Check If Collection Locations Exists",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "operation": "collectionExists",
        "collectionName": "={{ $('Loop Over Tags').item.json.collection }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        448,
        1536
      ],
      "id": "6b59a899-3b50-483b-8aa3-b154e9a027ee",
      "name": "Check If Collection Tags Exists",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function normalizeText(text) {\n  return text\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // quitar tildes\n    .trim();\n}\n\n// Hash FNV-1a (rápido y determinístico)\nfunction simpleHash(str) {\n  let hash = 2166136261;\n  for (let i = 0; i < str.length; i++) {\n    hash ^= str.charCodeAt(i);\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n  return (hash >>> 0).toString(16); // convertir a string hex\n}\n\nconst items = $input.all();\n\nreturn items.map((item) => {\n  const text_to_process = $('Loop Over Job Titles').first().json.text_to_embed || 'undefined';\n  const hash = simpleHash(normalizeText(text_to_process));\n  const hashNumber = parseInt(hash, 16);\n\n  // Asegurar que sea un array de números\n  const rawVector = $('Get Job Embeding').first().json.embedding;\n  const vector = Array.isArray(rawVector) ? rawVector : Object.values(rawVector);\n\n  return {\n    json: {\n      id: hashNumber,\n      vector: vector,\n      payload: {\n        text: $('Loop Over Job Titles').first().json.text_to_embed,\n        tipo: $('Loop Over Job Titles').first().json.collection\n      },\n      collection: $('Loop Over Job Titles').first().json.collection,\n      collection_exists: $input.first().json.result.exists\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        496,
        192
      ],
      "id": "50c5e667-804e-4404-96eb-a387a0015d95",
      "name": "Fix Job Payload"
    },
    {
      "parameters": {
        "jsCode": "function normalizeText(text) {\n  return text\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // quitar tildes\n    .trim();\n}\n\n// Hash FNV-1a (rápido y determinístico)\nfunction simpleHash(str) {\n  let hash = 2166136261;\n  for (let i = 0; i < str.length; i++) {\n    hash ^= str.charCodeAt(i);\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n  return (hash >>> 0).toString(16); // convertir a string hex\n}\n\nconst items = $input.all();\n\nreturn items.map((item) => {\n  const text_to_process = $('Loop Over Locations').first().json.text_to_embed || 'undefined';\n  const hash = simpleHash(normalizeText(text_to_process));\n  const hashNumber = parseInt(hash, 16);\n\n  // Asegurar que sea un array de números\n  const rawVector = $('Get Location Embeding').first().json.embedding;\n  const vector = Array.isArray(rawVector) ? rawVector : Object.values(rawVector);\n\n  return {\n    json: {\n      id: hashNumber,\n      vector: vector,\n      payload: {\n        text: $('Loop Over Locations').first().json.text_to_embed,\n        tipo: $('Loop Over Locations').first().json.collection\n      },\n      collection: $('Loop Over Locations').first().json.collection,\n      collection_exists: $input.first().json.result.exists\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        496,
        864
      ],
      "id": "74f74ba2-73ce-407b-880d-ffd6de70c60f",
      "name": "Fix Location Payload"
    },
    {
      "parameters": {
        "jsCode": "// Hash FNV-1a (rápido y determinístico)\nfunction simpleHash(str) {\n  let hash = 2166136261;\n  for (let i = 0; i < str.length; i++) {\n    hash ^= str.charCodeAt(i);\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n  return (hash >>> 0).toString(16); // convertir a string hex\n}\n\nconst items = $input.all();\n\nreturn items.map((item) => {\n  // 📥 Obtenemos el texto ya normalizado\n  const text_to_process = $('Fix Array Tags').first().json.text_to_embed || 'undefined';\n\n  // 🧮 Generamos un hash determinístico\n  const hash = simpleHash(text_to_process);\n  const hashNumber = parseInt(hash, 16);\n\n  // 🧠 Asegurar que el embedding esté en formato array\n  const rawVector = $('Get Tags Embeding').first().json.embedding;\n  const vector = Array.isArray(rawVector) ? rawVector : Object.values(rawVector);\n\n  // 🧰 Construimos el payload\n  return {\n    json: {\n      id: hashNumber,   // este es el point id que se usará en Qdrant\n      vector: vector,\n      payload: {\n        text: text_to_process,\n        tipo: $('Loop Over Tags').first().json.collection || 'tags'\n      },\n      collection: $('Loop Over Tags').first().json.collection || 'tags',\n      collection_exists: $input.first().json.result.exists\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        1536
      ],
      "id": "dbee8386-8b88-41e8-8def-1b8155d39e2c",
      "name": "Fix Tags Payload"
    },
    {
      "parameters": {
        "operation": "createCollection",
        "collectionName": "={{ $('Loop Over Job Titles').item.json.collection }}",
        "vectors": "{\n  \"size\": 768,\n  \"distance\": \"Cosine\"\n}",
        "onDiskPayload": true,
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        864,
        336
      ],
      "id": "15a8ca86-406b-446a-883c-ad8e36c8a3e7",
      "name": "Create Collection Job Titles",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "operation": "createCollection",
        "collectionName": "={{ $('Loop Over Locations').item.json.collection }}",
        "vectors": "{\n  \"size\": 768,\n  \"distance\": \"Cosine\"\n}",
        "onDiskPayload": true,
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        864,
        1008
      ],
      "id": "0819a7d8-2ef0-4821-9867-e19a7bf7676e",
      "name": "Create Collection Locations",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "operation": "createCollection",
        "collectionName": "={{ $('Loop Over Tags').item.json.collection }}",
        "vectors": "{\n  \"size\": 768,\n  \"distance\": \"Cosine\"\n}",
        "onDiskPayload": true,
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        1008,
        1680
      ],
      "id": "3794df73-4efb-4037-b9c7-b3d9197af8e1",
      "name": "Create Collection Tags",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "resource": "point",
        "operation": "upsertPoints",
        "collectionName": {
          "__rl": true,
          "value": "={{ $json.collection }}",
          "mode": "name"
        },
        "points": "=[\n  {\n    \"id\": {{ $json.id }},\n    \"vector\": [{{ Object.values($json.vector) }}],\n    \"payload\": {\n      \"text\": \"{{ $json.payload.text }}\",\n      \"tipo\": \"{{ $json.payload.tipo }}\"\n    }\n  }\n]",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        1376,
        400
      ],
      "id": "8a73dd40-6828-499c-b4f8-136f1b5887de",
      "name": "Upsert Points Job",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "resource": "point",
        "operation": "upsertPoints",
        "collectionName": {
          "__rl": true,
          "value": "={{ $json.collection }}",
          "mode": "name"
        },
        "points": "=[\n  {\n    \"id\": {{ $json.id }},\n    \"vector\": [{{ Object.values($json.vector) }}],\n    \"payload\": {\n      \"text\": \"{{ $json.payload.text }}\",\n      \"tipo\": \"{{ $json.payload.tipo }}\"\n    }\n  }\n]",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        1376,
        1072
      ],
      "id": "23eef0f6-3174-40d9-9449-d41e0b6e923f",
      "name": "Upsert Points Location",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "resource": "point",
        "operation": "upsertPoints",
        "collectionName": {
          "__rl": true,
          "value": "={{ $json.collection }}",
          "mode": "name"
        },
        "points": "=[\n  {\n    \"id\": {{ $json.id }},\n    \"vector\": [{{ Object.values($json.vector) }}],\n    \"payload\": {\n      \"text\": \"{{ $json.payload.text }}\",\n      \"tipo\": \"{{ $json.payload.tipo }}\"\n    }\n  }\n]",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        1376,
        1744
      ],
      "id": "c9ba5d0c-f35a-4c06-8c09-acd8622fdfbb",
      "name": "Upsert Points Tags",
      "credentials": {
        "qdrantRestApi": {
          "id": "KAWrCuqm53MQlcHX",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nfunction normalizeText(str) {\n  return str\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // quita tildes\n    .trim();\n}\n\nreturn items.map(item => {\n  const arr = item.json.text_to_embed || [];\n  const text = Array.isArray(arr) ? arr.join(' ') : arr;\n  return {\n    json: {\n      ...item.json,\n      text_to_embed: normalizeText(text)\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        32,
        1536
      ],
      "id": "14f9f748-0d31-4099-bcbf-5fc6c688ca2a",
      "name": "Fix Array Tags"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/centroids/save",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $('Calculate Job Clusters').item.json.collection }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        752,
        0
      ],
      "id": "e9014640-e721-47ce-bf33-c005104a7214",
      "name": "Create Job Centroid"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/centroids/save",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $('Calculate Location Clusters').item.json.collection }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        752,
        656
      ],
      "id": "b5ab13c8-b2c4-4bea-80cf-3a9e7e8e3c67",
      "name": "Create Location Centroid"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/centroids/save",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $('Calculate Tags Clusters').item.json.collection }}"
            },
            {
              "name": "n_clusters",
              "value": "={{ $json.suggested_k }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        752,
        1344
      ],
      "id": "62ebf6fd-f535-4acd-bd22-9ce93fd1f277",
      "name": "Create Tags Centroid"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/clusters/suggest",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $('Get job_title').item.json.collection }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "e0b7f9ec-451b-4f95-a48a-c799d2aa431c",
      "name": "Calculate Job Clusters",
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/clusters/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $json.collection }}"
            },
            {
              "name": "n_clusters",
              "value": "={{ $json.suggested_k }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        352,
        0
      ],
      "id": "7307563f-05e0-4d87-9e38-cc9e69c972ac",
      "name": "Create Job Clusters",
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/clusters/suggest",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $('Get location').item.json.collection }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        32,
        656
      ],
      "id": "aaad1ebe-37bd-4dca-8579-6000744eab1a",
      "name": "Calculate Location Clusters",
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/clusters/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $json.collection }}"
            },
            {
              "name": "n_clusters",
              "value": "={{ $json.suggested_k }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        384,
        656
      ],
      "id": "bead8bcc-8a34-403e-94a8-3c427a121fe0",
      "name": "Create Location Clusters",
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/clusters/suggest",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $('Get tags').item.json.collection }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        32,
        1344
      ],
      "id": "23190c69-6aee-4aa2-a268-9bd3f9e97d6b",
      "name": "Calculate Tags Clusters",
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ml_service:8008/clusters/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "muddan-nuvvuh-7zyvhY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "collection",
              "value": "={{ $json.collection }}"
            },
            {
              "name": "n_clusters",
              "value": "={{ $json.suggested_k }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        384,
        1344
      ],
      "id": "6151b10f-1467-4fac-89d3-16e56f0a62ca",
      "name": "Create Tags Clusters",
      "executeOnce": true
    }
  ],
  "pinData": {},
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Get job_title",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get location",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get job_title": {
      "main": [
        [
          {
            "node": "Loop Over Job Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Job Titles": {
      "main": [
        [
          {
            "node": "Calculate Job Clusters",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Job Embeding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Upsert Points Job",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Collection Job Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Upsert Points Location",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Collection Locations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Upsert Points Tags",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Collection Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get tags": {
      "main": [
        [
          {
            "node": "Loop Over Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get location": {
      "main": [
        [
          {
            "node": "Loop Over Locations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Job Embeding": {
      "main": [
        [
          {
            "node": "Check If Collection Jobs Titles Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Location Embeding": {
      "main": [
        [
          {
            "node": "Check If Collection Locations Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Tags Embeding": {
      "main": [
        [
          {
            "node": "Check If Collection Tags Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Locations": {
      "main": [
        [
          {
            "node": "Calculate Location Clusters",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Location Embeding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Tags": {
      "main": [
        [
          {
            "node": "Calculate Tags Clusters",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fix Array Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Collection Jobs Titles Exists": {
      "main": [
        [
          {
            "node": "Fix Job Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Collection Locations Exists": {
      "main": [
        [
          {
            "node": "Fix Location Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Collection Tags Exists": {
      "main": [
        [
          {
            "node": "Fix Tags Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Job Payload": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Location Payload": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Tags Payload": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Collection Job Titles": {
      "main": [
        [
          {
            "node": "Upsert Points Job",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Collection Locations": {
      "main": [
        [
          {
            "node": "Upsert Points Location",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Collection Tags": {
      "main": [
        [
          {
            "node": "Upsert Points Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Points Job": {
      "main": [
        [
          {
            "node": "Loop Over Job Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Points Location": {
      "main": [
        [
          {
            "node": "Loop Over Locations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Points Tags": {
      "main": [
        [
          {
            "node": "Loop Over Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Array Tags": {
      "main": [
        [
          {
            "node": "Get Tags Embeding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Job Clusters": {
      "main": [
        [
          {
            "node": "Create Job Clusters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Job Clusters": {
      "main": [
        [
          {
            "node": "Create Job Centroid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Location Clusters": {
      "main": [
        [
          {
            "node": "Create Location Clusters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Location Clusters": {
      "main": [
        [
          {
            "node": "Create Location Centroid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Tags Clusters": {
      "main": [
        [
          {
            "node": "Create Tags Clusters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Tags Clusters": {
      "main": [
        [
          {
            "node": "Create Tags Centroid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "70fa5a07-83a4-4b53-95ed-df381f103735",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ace676532ce958726b0c4ffedc40ba8ecf285de3dec650ceeb8e8d1bd3844dec"
  },
  "id": "U1x0NDufOcmfiG8f",
  "tags": []
}